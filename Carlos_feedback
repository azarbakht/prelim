functions as neghborhoods
in nteraction data

commit distance
	reason for poytential conflicts

code commits
	contribution level -> status in community
	noisy complained on ML, vs. heavy contributors that can send contributors in rage


-------------------------------------------------
research on forking exists
	post-hoc
what was the outcome vs. what was the cause 

very little looking at the run up 
predictability

was it a long-run trend? or 
	community polarized
		tipping point

finding better measures for influence
	and the shift of inf. 

we're missing that context (pre-)
	what we have now, is post-hoc
--------------------------------------------------



RQ1. what are the social patterns associated witg different types of forking
is there a prototypical fork for this or that reason 


is a labeled project as a technical fork really only technical forks?
are there patterns that exemplify thise categories?
what are the determining factors? where is that? in ML? code? what does it look like?

RQ1.2
2.1  

2.3 undoable to prove, and check after finding and hypothesis
no possible examples of inevitable not-forking
	projects that have flirted with disacter


RQ.3 does my analysis of the situatuon match what people in that community rememeber or 
if I show someone, would they draw the same conclusuon as the first one?

remember?
inflate?

current communiti folks, have them reflect on .. and future (less important than RQ1)


can we using these
HOW
WHY
projects fork.


important b/c projects fork all the time

sentiment analysis before and after split
a measure of average negativity
	

what we don't know abouyt forking

# of unanswered questions
